Function arguments beyond any consumed by formal (named) parameters may be
consolidated into tuple form with *var or into dictionary form with **var using
keywords arguments, as in:

def myfunc(a, b, *args, **keywords):
    print(a, b)
    print(args)
    print(args[1])
    print(keywords)
    print(keywords["e"])
    print(repr(list(keywords.keys())[1]))
    
myfunc("first", "second", "third", "fourth", d="fifth", e="sixth")

Output:

first second
('third', 'fourth')
fourth
{'d': 'fifth', 'e': 'sixth'}
sixth
'e'

mydict = {'e': 'seventh', 'f': 'eighth'}
myfunc("first", "second", "third", "fourth", **mydict)
   # **mydict converts the dictionary mydict into keyword arguments

Output:

first second
('third', 'fourth')
fourth
{'e': 'seventh', 'f': 'eighth'}
seventh
'f'
