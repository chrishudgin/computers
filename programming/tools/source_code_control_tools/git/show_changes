Summarize changes to be committed and changes in the working directory that
are not staged:

$ git status

If a file is modified, staged, and then modified again, without any intervening
commits, then "git status" will show the file as modified in the "changes to be
committed" section as well as in the "changes not staged for commit" section.

Show differences between files in the tree and the Git index (or HEAD) for that
tree, i.e. what will happen to the files in the index (or HEAD) when the files
in the tree are staged (or committed):

$ git diff [HEAD] [-- <file>]

If there are no uncommitted changes currently in the index, then HEAD is
assumed and the diff comparison is between the working tree and HEAD.

Show differences between files in the index and the last committed versions of
those files, i.e. what will happen to the files in the database when files in
the index are committed:

$ git diff --cached [-- <file>]
OR
$ git diff --staged [-- <file>]

Show differences in a given file between the second most recent commit (n-1)
and the most recent one (n):

$ git diff HEAD^ [HEAD] hello.c   # HEAD is assumed if not specified

Show a file as it appeared in a given commit:

$ git show HEAD^:./hello.c  # show hello.c in previous (parent, n-1) commit

In each case, the default output format for "git diff" is that of "diff -u",
the unified diff format that includes 3 lines of context around deletions and
additions.  A change to a line is recorded as a deletion followed immediately
by an addition.
