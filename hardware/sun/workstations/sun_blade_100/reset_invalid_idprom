Reference:
https://github.com/MrSparc/idprom-repair/blob/master/README.md

In this example, the desired Ethernet address is 00:03:ba:08:35:8c
   and the hostid is 8308358c

Stop-A
ok setenv auto-boot? false
ok setenv diag-switch? false
ok show-devs
ok cd /pci@1f,0/ebus@c/eeprom@1,0
ok .properties

Use the address value, in this case fff4a000

ok fff4a000 >physical

ok showstack
ok 2000 memmap
ok 1fd0 +
ok 30 dump
          \/  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f  v123456789abcdef
fff35fd0  8d 00 01 20 04 42 1c 14  81 02 01 48 09 80 88 15  ... .B.....H....
fff35fe0  02 08 82 62 0c 82 a2 00  00 20 12 00 2a 20 81 60  ...b..".. ..* .`
fff35ff0  10 00 00 00 00 00 00 00  00 01 13 22 04 15 03 49  ..........."...I
ok banner

Sun Blade 100 (UltraSPARC-IIe), No Keyboard
Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
OpenBoot 4.17.1, 2048 MB memory installed, Serial #34374306.
Ethernet address 1:48:9:80:88:15, Host ID: 020c82a2.

The output will show virtual addresses, which can change after each reboot.  In
the example above, the first virtual address we want to overwrite is fff35fd8
since, when comparing the dump output to the banner output, we see that d9 is
the address of the first hostid byte and da is address of the start of the
Ethernet address.

Use the actual virtual addresses in the commands below.

Use up and down arrows for command history.

Write version (01) and hostid byte 0 (machine type), which is in this case 83:

ok 01 fff41fd8 c!
ok 83 fff41fd9 c!

Ethernet address:

ok 00 fff41fda c!
ok 03 fff41fdb c!
ok ba fff41fdc c!
ok 08 fff41fdd c!
ok 35 fff41fde c!
ok 8c fff41fdf c!

Write zeros (if not already) for the production date

ok 00 fff41fe0 c!
ok 00 fff41fe1 c!
ok 00 fff41fe2 c!
ok 00 fff41fe3 c!

Write hostid[1-3] bytes: 08358c

ok 08 fff41fe4 c!
ok 35 fff41fe5 c!
ok 8c fff41fe6 c!

Calculate XOR-checksum for the values starting from fff41fd8, until fff41fe6

Note: For hyperion using the hostid and Ethernet address shown above, the
checksum is 3b and does not need to be re-computed every time, just written
into memory with the c! command below.

ok 01 83 xor
ok 00 xor
ok 03 xor
ok ba xor
ok 08 xor
ok 35 xor
ok 8c xor
ok 08 xor
ok 35 xor
ok 8c xor
3b ok
(In this case, 3b is the calculated checksum displayed after the previous input)

Write calculated checksum
ok 3b fff41fe7 c!

ok reset-all
ok banner
