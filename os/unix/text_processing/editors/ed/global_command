The "global" command "<addr1>,<addr2>g/<RE>/<command>" operates as a "foreach",
running <command> iteratively on each line selected by the regular expression
<RE> that matches within the specified address range <addr1,addr2>.

In contrast, commands line "t" (copy) and "m" (move) operate on a range of
lines as a block, not iteratively on one line at a time.

A "command" executed in a global context can include an address range (and even
regular expressions that evaluate to addresses), just as a command outside of a
global context can.  Thus, the following syntax is valid:

[<addr1>[,<addr2]]g/<RE>/[<addr3>[,<addr4>]]<command>

Example:

1,20g/^foo/+,/^bar/-p

finds all lines matching /^foo/ between lines 1 and 20 in the buffer, and for
each such line found, prints the lines that are strictly between the line that
begins with "foo" and the next line that begins with "bar".  Note that the
search for each next /^bar/ after a matching /^foo/ is not constrained to the
line range 1,20 that was used to find each /^foo/

Syntactically, in this example:
   addr1 is 1
   addr2 is 20
   /RE/ is /^foo/
   addr3 is +  (.+, where . is set iteratively to each line matching /^foo/)
   addr4 is /^bar/-
   command is p
