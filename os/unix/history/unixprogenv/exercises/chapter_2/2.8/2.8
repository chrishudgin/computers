If cp without any recursive options is given a directory as a "source" argument
(as opposed to the "destination" argument), it will report that it was given a
directory argument but not copy it or its contents.  This behavior is useful
when recursion is not desired, when the user only wishes to copy the regular
files in a directory and nothing below it.  Such behavior is also sensible
since recursive copying could result in potentially large amounts of data and
files being copied, none of which would be immediately visible from a casual
listing of files in the directory.

Unix operating systems have chosen to implement a recursive (-r) option to the
cp command to descend directories.  This seems logical since the basic
operation is the same (copy files) and therefore should be associated with the
same command (cp).

Implementing a separate recursive copy command, rcp, would require either
re-implementing the functionality of the cp command in the rcp command or else
calling cp to perform individual file copies, neither of which would be
efficient.

As discussed above, making a recursive copy be the default behavior of cp could
result in much unintended file content being copied, especially if many or
large files were nested more than one or two subdirectories below the current
directory.  If recursion were the default behavior, it would still be useful to
have a non-recursive option to cp when the user desires to copy only the
regular files in the specific directory given in an argument (or current
directory).

A program like mv could potentially benefit from a recursion option for the
same reason that cp does.  A recursive grep could be useful when searching for
text in files that could be anywhere under a directory.  A recursive option to
ls is clearly useful for listing all files in a directory tree.  A recursive
option to chmod and chown is helpful for changing permissions or ownerships of
files consistently starting from a particular point in the filesystem (for
example, to make all files under a user's home directory owned by that user).
