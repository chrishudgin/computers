Process initialization on modern Unix-like systems is significantly more
involved than it was on 7th Edition Unix.  Speed improvements to doctype can be
gained by minimizing the number of processes that need to be spawned in the
doctype script--the opposite of the approach taken by the authors to minimize
the amount of work that awk must do.

Removing the sort command would not impact the functionality of the script,
only add more work for awk to do.  For typical document lengths, the overhead
of spawing a process for sort would probably be greater than time needed for
awk to process multiple matches for troff macro commands like .PP.

Since replacing awk with other tools (*grep, sed, and shell logic) would
require multiple additional process invocations, keeping awk in the script is
desirable.  In fact, awk can perform all of the functions required for the
script (except in 7th Edition UNIX where the shell must still provide the
argument list to awk).  Reducing the number of processes and commands required
to just awk itself, or just awk and the shell, produces what is probably the
fastest solution.

Using the "time" command confirms that on a modern (kernel verison 6.1) Linux
system, the revised version of doctype that utilizes only awk called by the
shell runs approximately twice as fast as the original.
